{"ast":null,"code":"import axios from \"axios\";\nlet api = `${process.env.REACT_APP_API}/cart`;\nexport function getCart(userId) {\n  return axios.get(api, {\n    headers: {\n      Authorization: JSON.parse(sessionStorage.getItem(\"token\")).token\n    },\n    data: {\n      userId: userId\n    }\n  });\n}\nexport async function updateCart(productToAdd) {\n  try {\n    return await axios.post(api, productToAdd, {\n      headers: {\n        Authorization: JSON.parse(sessionStorage.getItem(\"token\")).token\n      }\n    });\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function addOrRemoveProduct(productToAdd) {\n  try {\n    const response = await updateCart(productToAdd);\n    const {\n      action,\n      message\n    } = response.data;\n    if (response.status === 200 || 201) {\n      ////if added to cart\n      if (action === \"add\") {\n        alert(\"Product added to cart\");\n        /////if removed from cart\n      } else if (action === \"remove\") {\n        alert(\"Product removed from cart\");\n      }\n    }\n  } catch (error) {\n    console.error(\"An error occurred\", error);\n  }\n}","map":{"version":3,"names":["axios","api","process","env","REACT_APP_API","getCart","userId","get","headers","Authorization","JSON","parse","sessionStorage","getItem","token","data","updateCart","productToAdd","post","error","addOrRemoveProduct","response","action","message","status","alert","console"],"sources":["/Users/lironds/Documents/FullStack/HackerU/Projects/PopWiz/popwiz-client/src/services/cartsServices.ts"],"sourcesContent":["import axios from \"axios\";\nimport User from \"../interfaces/User\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { TokenDetails } from \"../App\";\nimport Cart from \"../interfaces/Cart\";\nimport Product from \"../interfaces/Product\";\n\nlet api: string = `${process.env.REACT_APP_API}/cart`;\n\nexport function getCart(userId: string) {\n  return axios.get(api, {\n    headers: {\n      Authorization: JSON.parse(sessionStorage.getItem(\"token\") as string).token,\n    },\n    data: {\n      userId: userId,\n    },\n  });\n}\n\nexport async function updateCart(productToAdd: Product) {\n  try {\n    return await axios.post(api, productToAdd, {\n      headers: {\n        Authorization: JSON.parse(sessionStorage.getItem(\"token\") as string).token,\n      },\n    });\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function addOrRemoveProduct(productToAdd: Product) {\n  try {\n    const response = await updateCart(productToAdd);\n    const { action, message } = response.data;\n\n    if (response.status === 200 || 201) {\n      ////if added to cart\n      if (action === \"add\") {\n        alert(\"Product added to cart\");\n        /////if removed from cart\n      } else if (action === \"remove\") {\n        alert(\"Product removed from cart\");\n      }\n    }\n  } catch (error) {\n    console.error(\"An error occurred\", error);\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAOzB,IAAIC,GAAW,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,OAAM;AAErD,OAAO,SAASC,OAAOA,CAACC,MAAc,EAAE;EACtC,OAAON,KAAK,CAACO,GAAG,CAACN,GAAG,EAAE;IACpBO,OAAO,EAAE;MACPC,aAAa,EAAEC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAW,CAAC,CAACC;IACvE,CAAC;IACDC,IAAI,EAAE;MACJT,MAAM,EAAEA;IACV;EACF,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeU,UAAUA,CAACC,YAAqB,EAAE;EACtD,IAAI;IACF,OAAO,MAAMjB,KAAK,CAACkB,IAAI,CAACjB,GAAG,EAAEgB,YAAY,EAAE;MACzCT,OAAO,EAAE;QACPC,aAAa,EAAEC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAW,CAAC,CAACC;MACvE;IACF,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeC,kBAAkBA,CAACH,YAAqB,EAAE;EAC9D,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAML,UAAU,CAACC,YAAY,CAAC;IAC/C,MAAM;MAAEK,MAAM;MAAEC;IAAQ,CAAC,GAAGF,QAAQ,CAACN,IAAI;IAEzC,IAAIM,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAI,GAAG,EAAE;MAClC;MACA,IAAIF,MAAM,KAAK,KAAK,EAAE;QACpBG,KAAK,CAAC,uBAAuB,CAAC;QAC9B;MACF,CAAC,MAAM,IAAIH,MAAM,KAAK,QAAQ,EAAE;QAC9BG,KAAK,CAAC,2BAA2B,CAAC;MACpC;IACF;EACF,CAAC,CAAC,OAAON,KAAK,EAAE;IACdO,OAAO,CAACP,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;EAC3C;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}