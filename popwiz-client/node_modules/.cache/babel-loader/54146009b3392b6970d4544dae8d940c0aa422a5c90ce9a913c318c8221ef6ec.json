{"ast":null,"code":"import axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nlet api = `${process.env.REACT_APP_API}/users`;\n////Register\nexport function addUser(newUser) {\n  return axios.post(`${api}/register`, newUser);\n}\n///Login\nexport function checkUser(userToCheck) {\n  return axios.post(`${api}/login`, userToCheck);\n}\n\n////Update user\nexport function updateUser(_id, updatedUser) {\n  return axios.put(`${api}/${_id}`, updatedUser, {\n    headers: {\n      Authorization: JSON.parse(sessionStorage.getItem(\"token\")).token\n    }\n  });\n}\nexport function getUserById(_id) {\n  console.log(_id);\n  return axios.get(`${api}/${_id}`, {\n    headers: {\n      Authorization: JSON.parse(sessionStorage.getItem(\"token\")).token\n    }\n  });\n}\nexport function getTokenDetails() {\n  const storedToken = sessionStorage.getItem(\"token\");\n  return storedToken ? jwtDecode(JSON.parse(storedToken).token) : null;\n}","map":{"version":3,"names":["axios","jwtDecode","api","process","env","REACT_APP_API","addUser","newUser","post","checkUser","userToCheck","updateUser","_id","updatedUser","put","headers","Authorization","JSON","parse","sessionStorage","getItem","token","getUserById","console","log","get","getTokenDetails","storedToken"],"sources":["/Users/lironds/Documents/FullStack/HackerU/Projects/PopWiz/popwiz-client/src/services/usersServices.ts"],"sourcesContent":["import axios from \"axios\";\nimport User from \"../interfaces/User\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { TokenDetails } from \"../App\";\n\nlet api: string = `${process.env.REACT_APP_API}/users`;\ntype userLogin = Pick<User, \"email\" | \"password\">;\n////Register\nexport function addUser(newUser: User) {\n  return axios.post(`${api}/register`, newUser);\n}\n///Login\nexport function checkUser(userToCheck: userLogin) {\n  return axios.post(`${api}/login`, userToCheck);\n}\n\n////Update user\nexport function updateUser(_id: string, updatedUser: User) {\n  return axios.put(`${api}/${_id}`, updatedUser, {\n    headers: {\n      Authorization: JSON.parse(sessionStorage.getItem(\"token\") as string).token,\n    },\n  });\n}\nexport function getUserById(_id: string) {\n  console.log(_id);\n\n  return axios.get(`${api}/${_id}`, {\n    headers: {\n      Authorization: JSON.parse(sessionStorage.getItem(\"token\") as string).token,\n    },\n  });\n}\n\nexport function getTokenDetails(): TokenDetails | null {\n  const storedToken = sessionStorage.getItem(\"token\");\n\n  return storedToken ? jwtDecode(JSON.parse(storedToken).token) : null;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,QAAQ,YAAY;AAGtC,IAAIC,GAAW,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,aAAc,QAAO;AAEtD;AACA,OAAO,SAASC,OAAOA,CAACC,OAAa,EAAE;EACrC,OAAOP,KAAK,CAACQ,IAAI,CAAE,GAAEN,GAAI,WAAU,EAAEK,OAAO,CAAC;AAC/C;AACA;AACA,OAAO,SAASE,SAASA,CAACC,WAAsB,EAAE;EAChD,OAAOV,KAAK,CAACQ,IAAI,CAAE,GAAEN,GAAI,QAAO,EAAEQ,WAAW,CAAC;AAChD;;AAEA;AACA,OAAO,SAASC,UAAUA,CAACC,GAAW,EAAEC,WAAiB,EAAE;EACzD,OAAOb,KAAK,CAACc,GAAG,CAAE,GAAEZ,GAAI,IAAGU,GAAI,EAAC,EAAEC,WAAW,EAAE;IAC7CE,OAAO,EAAE;MACPC,aAAa,EAAEC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAW,CAAC,CAACC;IACvE;EACF,CAAC,CAAC;AACJ;AACA,OAAO,SAASC,WAAWA,CAACV,GAAW,EAAE;EACvCW,OAAO,CAACC,GAAG,CAACZ,GAAG,CAAC;EAEhB,OAAOZ,KAAK,CAACyB,GAAG,CAAE,GAAEvB,GAAI,IAAGU,GAAI,EAAC,EAAE;IAChCG,OAAO,EAAE;MACPC,aAAa,EAAEC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAW,CAAC,CAACC;IACvE;EACF,CAAC,CAAC;AACJ;AAEA,OAAO,SAASK,eAAeA,CAAA,EAAwB;EACrD,MAAMC,WAAW,GAAGR,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAEnD,OAAOO,WAAW,GAAG1B,SAAS,CAACgB,IAAI,CAACC,KAAK,CAACS,WAAW,CAAC,CAACN,KAAK,CAAC,GAAG,IAAI;AACtE"},"metadata":{},"sourceType":"module","externalDependencies":[]}