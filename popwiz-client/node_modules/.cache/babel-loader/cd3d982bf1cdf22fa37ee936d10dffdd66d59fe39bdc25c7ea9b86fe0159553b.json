{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { deleteUser, getUsers } from \"../services/usersServices\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CRM = () => {\n  _s();\n  let [users, setUsers] = useState([]);\n  let [usersChanged, setUsersChanged] = useState(false);\n  let render = () => {\n    setUsersChanged(!usersChanged);\n  };\n  useEffect(() => {\n    getUsers().then(res => setUsers(res.data)).catch(err => console.log(err));\n  }, [usersChanged]);\n  let handleDelete = user => {\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\n      deleteUser(user._id).then(res => {\n        alert(\"User removed successfully\");\n        render();\n      }).catch(err => console.log(err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"This is CRM\"\n  }, void 0, false);\n};\n_s(CRM, \"68+Kn2sCMixggr2S86WsZskwtQo=\");\n_c = CRM;\nexport default CRM;\nvar _c;\n$RefreshReg$(_c, \"CRM\");","map":{"version":3,"names":["useEffect","useState","deleteUser","getUsers","Fragment","_Fragment","jsxDEV","_jsxDEV","CRM","_s","users","setUsers","usersChanged","setUsersChanged","render","then","res","data","catch","err","console","log","handleDelete","user","window","confirm","_id","alert","children","_c","$RefreshReg$"],"sources":["/Users/lironds/Documents/FullStack/HackerU/Projects/PopWiz/popwiz-client/src/components/CRM.tsx"],"sourcesContent":["import { FunctionComponent, useEffect, useState } from \"react\";\nimport User from \"../interfaces/User\";\nimport { deleteUser, getUsers } from \"../services/usersServices\";\n\ninterface CRMProps {}\n\nconst CRM: FunctionComponent<CRMProps> = () => {\n  let [users, setUsers] = useState<User[]>([]);\n  let [usersChanged, setUsersChanged] = useState<boolean>(false);\n\n  let render = () => {\n    setUsersChanged(!usersChanged);\n  };\n  useEffect(() => {\n    getUsers()\n      .then((res) => setUsers(res.data))\n      .catch((err) => console.log(err));\n  }, [usersChanged]);\n\n  let handleDelete = (user: User) => {\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\n      deleteUser(user._id as string)\n        .then((res) => {\n          alert(\"User removed successfully\");\n\n          render();\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n  return <>This is CRM</>;\n};\n\nexport default CRM;\n"],"mappings":";AAAA,SAA4BA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE9D,SAASC,UAAU,EAAEC,QAAQ,QAAQ,2BAA2B;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIjE,MAAMC,GAAgC,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7C,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAC5C,IAAI,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAU,KAAK,CAAC;EAE9D,IAAIa,MAAM,GAAGA,CAAA,KAAM;IACjBD,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EACDZ,SAAS,CAAC,MAAM;IACdG,QAAQ,CAAC,CAAC,CACPY,IAAI,CAAEC,GAAG,IAAKL,QAAQ,CAACK,GAAG,CAACC,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAElB,IAAIU,YAAY,GAAIC,IAAU,IAAK;IACjC,IAAIC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAAE;MAChEvB,UAAU,CAACqB,IAAI,CAACG,GAAa,CAAC,CAC3BX,IAAI,CAAEC,GAAG,IAAK;QACbW,KAAK,CAAC,2BAA2B,CAAC;QAElCb,MAAM,CAAC,CAAC;MACV,CAAC,CAAC,CACDI,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;IACrC;EACF,CAAC;EACD,oBAAOZ,OAAA,CAAAF,SAAA;IAAAuB,QAAA,EAAE;EAAW,gBAAE,CAAC;AACzB,CAAC;AAACnB,EAAA,CAzBID,GAAgC;AAAAqB,EAAA,GAAhCrB,GAAgC;AA2BtC,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}