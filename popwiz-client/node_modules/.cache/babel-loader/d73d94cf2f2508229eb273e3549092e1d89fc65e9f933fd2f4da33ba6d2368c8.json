{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { getUserById, updateUser } from \"../services/usersServices\";\nimport { useFormik } from \"formik\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = ({\n  userInfo,\n  setUserInfo\n}) => {\n  _s();\n  let {\n    _id\n  } = useParams();\n  let [user, setUser] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  useEffect(() => {\n    getUserById(String(_id)).then(res => {\n      setUser(res.data);\n    }).catch(error => console.log(error));\n  }, []);\n  let formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    enableReinitialize: true,\n    validationSchema: yup.object({\n      firstName: yup.string().required().min(2),\n      lastName: yup.string().required().min(2),\n      email: yup.string().required().email(),\n      password: yup.string().required().min(8)\n    }),\n    onSubmit: values => {\n      console.log(_id);\n      updateUser(values, String(_id)).then(res => {\n        navigate(\"/\");\n        alert(\"user updated successfully!\");\n      }).catch(error => {\n        if (error.response && error.response.status === 400) {\n          alert(error.response.data); // Display the error message in an alert\n        } else {\n          console.error(\"Error:\", error);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(UserProfile, \"LyW0F18r82kw2zuZA1ufwkXAZxw=\", false, function () {\n  return [useParams, useFormik];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["useEffect","useState","useParams","yup","getUserById","updateUser","useFormik","Fragment","_Fragment","jsxDEV","_jsxDEV","UserProfile","userInfo","setUserInfo","_s","_id","user","setUser","firstName","lastName","email","password","String","then","res","data","catch","error","console","log","formik","initialValues","enableReinitialize","validationSchema","object","string","required","min","onSubmit","values","navigate","alert","response","status","_c","$RefreshReg$"],"sources":["/Users/lironds/Documents/FullStack/HackerU/Projects/PopWiz/popwiz-client/src/components/UserProfile.tsx"],"sourcesContent":["import { FunctionComponent, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport User from \"../interfaces/User\";\nimport { getUserById, updateUser } from \"../services/usersServices\";\nimport { useFormik } from \"formik\";\n\ninterface UserProfileProps {\n  setUserInfo: Function;\n  userInfo: any;\n}\n\nconst UserProfile: FunctionComponent<UserProfileProps> = ({ userInfo, setUserInfo }) => {\n  let { _id } = useParams();\n  let [user, setUser] = useState<User>({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  useEffect(() => {\n    getUserById(String(_id))\n      .then((res) => {\n        setUser(res.data);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n  let formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    enableReinitialize: true,\n\n    validationSchema: yup.object({\n      firstName: yup.string().required().min(2),\n      lastName: yup.string().required().min(2),\n      email: yup.string().required().email(),\n      password: yup.string().required().min(8),\n    }),\n    onSubmit: (values) => {\n      console.log(_id);\n      updateUser(values, String(_id))\n        .then((res) => {\n          navigate(\"/\");\n          alert(\"user updated successfully!\");\n        })\n        .catch((error) => {\n          if (error.response && error.response.status === 400) {\n            alert(error.response.data); // Display the error message in an alert\n          } else {\n            console.error(\"Error:\", error);\n          }\n        });\n    },\n  });\n  return <></>;\n};\n\nexport default UserProfile;\n"],"mappings":";AAAA,SAA4BA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,KAAKC,GAAG,MAAM,KAAK;AAE1B,SAASC,WAAW,EAAEC,UAAU,QAAQ,2BAA2B;AACnE,SAASC,SAAS,QAAQ,QAAQ;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOnC,MAAMC,WAAgD,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACtF,IAAI;IAAEC;EAAI,CAAC,GAAGb,SAAS,CAAC,CAAC;EACzB,IAAI,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAO;IACnCiB,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEFrB,SAAS,CAAC,MAAM;IACdI,WAAW,CAACkB,MAAM,CAACP,GAAG,CAAC,CAAC,CACrBQ,IAAI,CAAEC,GAAG,IAAK;MACbP,OAAO,CAACO,GAAG,CAACC,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EACN,IAAIG,MAAM,GAAGxB,SAAS,CAAC;IACrByB,aAAa,EAAE;MACbb,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IACDW,kBAAkB,EAAE,IAAI;IAExBC,gBAAgB,EAAE9B,GAAG,CAAC+B,MAAM,CAAC;MAC3BhB,SAAS,EAAEf,GAAG,CAACgC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;MACzClB,QAAQ,EAAEhB,GAAG,CAACgC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC,CAAC;MACxCjB,KAAK,EAAEjB,GAAG,CAACgC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAChB,KAAK,CAAC,CAAC;MACtCC,QAAQ,EAAElB,GAAG,CAACgC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC;IACzC,CAAC,CAAC;IACFC,QAAQ,EAAGC,MAAM,IAAK;MACpBX,OAAO,CAACC,GAAG,CAACd,GAAG,CAAC;MAChBV,UAAU,CAACkC,MAAM,EAAEjB,MAAM,CAACP,GAAG,CAAC,CAAC,CAC5BQ,IAAI,CAAEC,GAAG,IAAK;QACbgB,QAAQ,CAAC,GAAG,CAAC;QACbC,KAAK,CAAC,4BAA4B,CAAC;MACrC,CAAC,CAAC,CACDf,KAAK,CAAEC,KAAK,IAAK;QAChB,IAAIA,KAAK,CAACe,QAAQ,IAAIf,KAAK,CAACe,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UACnDF,KAAK,CAACd,KAAK,CAACe,QAAQ,CAACjB,IAAI,CAAC,CAAC,CAAC;QAC9B,CAAC,MAAM;UACLG,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAChC;MACF,CAAC,CAAC;IACN;EACF,CAAC,CAAC;EACF,oBAAOjB,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACd,CAAC;AAACM,EAAA,CAhDIH,WAAgD;EAAA,QACtCT,SAAS,EAeVI,SAAS;AAAA;AAAAsC,EAAA,GAhBlBjC,WAAgD;AAkDtD,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}